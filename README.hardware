		Xilinx ZynqMP Board Support Package


Table of Contents
=================

1. Supported Boards
2. Change History
3. BSP Features
4. BSP Notes


1. Supported Boards
===================

This BSP supports the following boards:

  + Xilinx ZYNQMP ZCU102 REV 1.0


2. Change History
=================

  - 2016/12 (US88597): WRLinux 9.0,  standard and preempt-rt support
		Add the basic support for ZYNQMP ZCU102 based on 2016.02
  - 2017/02 (US93750): Update to SDK 2016.04
  - 2017/12 (US104834): Wind River Linux 9.0 RCPL13: upgrade to align to
			xilinx-sdk-2017-01
  - 2018/02 (US107619): Wind River Linux 9.0 RCPL14: upgrade to
			xilinx-sdk-2017-03 and add graphic support
  - 2018/05 (US107241): RCPL-10.17.41.7: Based on SDK2017.04 and Rev 1.0


3. BSP Features
===============

3.1 Supported Features
----------------------

The following BSP features are validated and supported on boards where
the corresponding h/w features exist.

  o General Platform
	+ DMA Engine: The enhanced direct memory access (EDMA) controller
	+ IOMMU
	+ SMMUv2

  o Bus
	+ CAN: ZynqMP
	+ I2C: Cadence 
	+ SPI: ZynqMP
	+ PCIe: On-Chip PCIe controller
	+ USB: Host/Gadget/OTG mode

  o Network
	+ MACB: Gigabits Controller
	+ PHY: Fixed MDIO

  o Storage
	+ NOR Flash: N25Q512A 128MB
	+ Sata CEVA
	+ SD/MMC:

  o Power Mgmt
	+ CPU hotplug
	+ CPU IDLE: WFI mode
	+ CPU Frequency

  o Misc Devices
	+ EDAC zynqmp memory controller
	+ INA2xx
	+ RTC
	+ UART

  o Graphic
       + ARM Mali-400 MP2(r7p0-00rel0)
       + DisplayPort
       + Xilinx DRM
       + Xilinx FB

3.2 Patch integrated and Unsupported Features
---------------------------------------------

The following features are not validated fanned out from PL:

  x HPC0, HPC1 ports (One for imx274 camera)
  x Two HDMI ports
  x 2x2 SFP/SFP+ ports

Please refer to BSP notes for more information.


4. BSP Notes
============

4.1 Validated Board Info
------------------------

This BSP is only validated in following environment. If you use this BSP
in a different environment it may possibly have some issues.

	Processor:              ZYMQMP (410fd034 revision 4, Chip ID: xczu9eg)
	Board Revision:	        Rev 1.0
	BootLoader:             U-Boot
	BootLoader Version:     U-Boot 2017.01 (Apr 25 2017 - 03:56:44 -0600)

4.2 USB OTG
-----------

We noticed USB OTG does not work from our side, and file this question to the
vendor, the following link is their answer:
  https://forums.xilinx.com/t5/Embedded-Development-Tools/OTG-in-ZCU102-with-Rev-1-0-doesn-t-work-on-the-latest-SDK-v2017/td-p/837647

So we set USB 3.0 port as host by default since OTG seems not well, please refer
to the following link:
  http://www.wiki.xilinx.com/Zynq+Ultrascale+MPSOC+Linux+USB+device+driver#OTG%20Mode

4.3 PCIe
--------

Only some limited PCIe devices were supported based on the SDK2017.04 and the
following link:

  http://www.wiki.xilinx.com/ZynqMP+Linux+PCIe+Root+Port

4.4 DisplayPort
---------------

According to the vendor, only some monitors in the following link are supported:
  https://www.xilinx.com/support/answers/68671.html

It is mandatory to have direct a connection between the ZCU102 board and display
monitor through a DP cable.

4.5 Mali400 kernel module and userspace lib for zynqmp
------------------------------------------------------

3D-graphics apps calls Mali-libs API(libmali-xlnx) to drive the Mali400 GPU
directly by Mali400 kernel driver.
Some of mesa-demos tests cases can be used to validate this function limitly,
but we just keep this part as-is without further debugging since only binary
libs are available.

Currently we can't include libmali-xlnx directly because of license issue, so
the following lines have been uncommented from conf/machine/xilinx-zynqmp.inc

  # PREFERRED_PROVIDER_virtual/mesa_xilinx-zynqmp = "mesa-gl"
  # PREFERRED_PROVIDER_virtual/libgl_xilinx-zynqmp = "mesa-gl"
  # PREFERRED_PROVIDER_virtual/libgles1_xilinx-zynqmp = "libmali-xlnx"
  # PREFERRED_PROVIDER_virtual/libgles2_xilinx-zynqmp = "libmali-xlnx"
  # PREFERRED_PROVIDER_virtual/egl_xilinx-zynqmp = "libmali-xlnx"

And libmali-xlnx also has been uncommented from the whitelist in bsp-pkgs.conf

  # PNWHITELIST_wr-xilinx-zynqmp += 'libmali-xlnx'

So directly building sato with "bitbake wrlinux-image-glibc-std-sato" will be
meaningless for graphics output. Here three steps to build it:

  1> Get mali400-xlnx-userspace from the vendor, or you can directly download
     the tarball if you have the valid account by the link posted in the below
     part of this section, and then copy it into the following fold:

     $ cp path_to_the_tarball path_to_your_project/layers/xilinx-zynqmp/downloads/git2_gitenterprise.xilinx.com.Graphics.mali400-xlnx-userspace.git.tar.gz

  2> uncomment all lines mentioned above as follows shown("# " removed):

     In the path_to_your_project/layers/xilinx-zynqmp/conf/machine/xilinx-zynqmp.inc

       PREFERRED_PROVIDER_virtual/mesa_xilinx-zynqmp = "mesa-gl"
       PREFERRED_PROVIDER_virtual/libgl_xilinx-zynqmp = "mesa-gl"
       PREFERRED_PROVIDER_virtual/libgles1_xilinx-zynqmp = "libmali-xlnx"
       PREFERRED_PROVIDER_virtual/libgles2_xilinx-zynqmp = "libmali-xlnx"
       PREFERRED_PROVIDER_virtual/egl_xilinx-zynqmp = "libmali-xlnx"

     In the path_to_your_project/layers/xilinx-zynqmp/templates/default/bsp-pkgs.conf

       PNWHITELIST_wr-xilinx-zynqmp += 'libmali-xlnx'

  3> Launch bitbake to build wrlinux-image-glibc-std-sato with libmali-xlnx

     $ cd path_to_your_project
     $ . ./oe-init-build-env
     $ rm -f conf/wr*
     $ bitbake wrlinux-image-glibc-std-sato

Here is the download website for the libmali-xlnx binary libs:
  http://www.xilinx.com/products/design-tools/embedded-software/petalinux-sdk/arm-mali-400-software-download.html

4.6 Hardware features fanned out from PL
----------------------------------------

Most of these features are not validated since they need a special TRD firmware
bootloader with the related PL bitstream, generally speaking, you can download
these the specific Xilinx xapp from the vendor website wih your Xilinx account,
like xapp1305 for SFP interface.
